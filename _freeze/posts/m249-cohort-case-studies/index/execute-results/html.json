{
  "hash": "4429fb56383e47792a85b5375fbde02c",
  "result": {
    "markdown": "---\ntitle: Cohort and Case-Control Studies\nauthor: LaughingRook\ndate: '2022-04-25'\ncategories:\n  - m249\n  - statistics\nformat:\n  html:\n    code-fold: false\n---\n\n## Summary notes\n\nThe aim of this \n\n## Dependencies\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats as st\nfrom statsmodels import api as sm\n```\n:::\n\n\n## Global constants\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nOBS = np.array([[14, 1931], [4, 1763]])\n```\n:::\n\n\n## Functions\n\n## Main\n\n### Initialise the contingency table\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nctable = sm.stats.Table2x2(OBS)\nprint(ctable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nA 2x2 contingency table with counts:\n[[  14. 1931.]\n [   4. 1763.]]\n```\n:::\n:::\n\n\n### Measures of association\n\n#### Odds ratio\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nodds_ratio = pd.Series(\n    data={\n        'point est': ctable.oddsratio,\n        'lcb': ctable.oddsratio_confint()[0],\n        'ucb': ctable.oddsratio_confint()[1],\n    },\n    name='odds ratio'\n)\nprint(odds_ratio)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npoint est    3.195495\nlcb          1.049877\nucb          9.726081\nName: odds ratio, dtype: float64\n```\n:::\n:::\n\n\n#### Relative risk\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nrel_risk = pd.Series(\n    data={\n        'point est': ctable.riskratio,\n        'lcb': ctable.riskratio_confint()[0],\n        'ucb': ctable.riskratio_confint()[1],\n    },\n    name='relative risk'\n)\nprint(rel_risk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npoint est    3.179692\nlcb          1.048602\nucb          9.641829\nName: relative risk, dtype: float64\n```\n:::\n:::\n\n\n### Chi-squared test for no association\n\nExpected frequences under the null hypothesis of no association.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nprint(ctable.fittedvalues)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[   9.43157328 1935.56842672]\n [   8.56842672 1758.43157328]]\n```\n:::\n:::\n\n\nDifferences between the observed and expected values.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nprint(OBS - ctable.fittedvalues)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[ 4.56842672 -4.56842672]\n [-4.56842672  4.56842672]]\n```\n:::\n:::\n\n\nContributions to the chi-squared test statisic.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nprint(ctable.chi2_contribs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[2.21283577 0.01078263]\n [2.43574736 0.01186883]]\n```\n:::\n:::\n\n\nTest result for a chi-squared test of no association.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nres = ctable.test_nominal_association()\npd.Series(\n    data={'statistic': res.statistic, 'pval': res.pvalue, 'df': int(res.df)},\n    name='chi-squared test',\n    dtype=object\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nstatistic    4.671235\npval         0.030672\ndf                  1\nName: chi-squared test, dtype: object\n```\n:::\n:::\n\n\n#### Fisher's Exact Test\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}