{"title":"Initialising an Undirected Graph in NetworkX","markdown":{"yaml":{"title":"Initialising an Undirected Graph in NetworkX","author":"LaughingRook","date":"2022-04-28","categories":["Graph"],"format":{"html":{"code-fold":false}}},"headingText":"Summary notes","containsRefs":false,"markdown":"\n\n\nInitialise and populate an undirected weighted graph using NetworkX.\nThe source data is a CSV file listing the road network in Europe as an *edge list*. (Nodes are cities, and the edges represent roads connecting cities.)\n\nWe first import the data into a Pandas `DataFrame`.\nYou don't have to use a `DataFrame` to hold the source data, but there are special characters in the source data, and so we outsourced dealing with them to Pandas.\nNext, we exported the `DataFrame` as a dictionary of dictionaries.\nWe initialised an empty graph, and populated it (using list comprehension and the dictionary.)\nWe closed the note by showing how to access the nodes, neighbors, and edges of the graph.\n\nWhilst we could populate the graph during initialisation, we found it added unneeded complexity.\nFinal note, the |*edges*| ≠ |*edge list*| because the NetworkX `Graph` class does not permit parallel edges between two nodes.\n(In other words, the source list has multiple roads connecting some cities.)\n\n## Dependencies\n\n## Global constants\n\nThis is the URL to the source data.\n\nColumn titles in the source data.\nWe feel it improves the readability of the code when populating the graph, but it is optional, and you could instead directly pass the column titles.\n\n## Main\n\n### Import the data\n\n### Export data to a dictionary\n\nEach entry in the dictionary is a dictionary representing a single row, where the keys are the column titles.\n\n### Initalise the graph\n\n### Populate the graph\n\nAdds the nodes.\nWe perform it on both the source and destination nodes in the *edge list* to ensure we populate all the cities.\n(There's a chance that a city does not appear as a source city in the data.)\nThe dictionary we pass in the tuple are data describing a node.\n\nAdd the edges.\nGiven this is an undirected graph, there is no need to add the reverse edges, *v* → *u*.\nThe dictionary we pass in the tuple are data that describe an edge.\n\n### Inspect the graph\n\nGet a description of the graph.\n\nGet a selection of the nodes.\n\nOutput a more descriptive list of nodes by calling the `nodes()` method.\n\nView the neighbours of the Roma node.\n\nWe can get a more descriptive list of a node's neighbours by not using list comprehension.\n\nFinally, we can simply output the edges of the Roma node.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"toc-depth":3,"output-file":"2022-04-28-initialise_undirected_graph_networkx.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"0.9.339","theme":"../ember.scss","title-block-banner":false,"title":"Initialising an Undirected Graph in NetworkX","author":"LaughingRook","date":"2022-04-28","categories":["Graph"]},"extensions":{"book":{"multiFile":true}}}}}